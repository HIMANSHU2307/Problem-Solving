/////////////////////////////////////////////////////////////////////// Factorial

function factorial(num) {
  if(num === 0) return 1;
  return num * factorial(num-1)
}


/////////////////////////////////////////////////////////////////////// power(2,0) // 1
// power(2,2) // 4
// power(2,4) // 16

function power(num, exp){
    if(exp === 0) return 1;
    
    else 
    return num * power(num, exp-1)
}

console.log(power(2, 4))


///////////////////////////////////////////////////////////////////// sumOfArray([1,2,3]) // 6


function arrSum(arr) {
    let result = 0;
  
  function helperFun(arr) {
  	if(arr.length === 0) return 0;
    
    result += arr[0];
    
    helperFun(arr.slice(1));
  }
  
  helperFun(arr);
  
  return result;
}


console.log(arrSum([1, 2, 3]));





//////////////////////////////////////////////////////////////////// fib(4) // 3
// fib(10) // 55
// fib(28) // 317811
// fib(35) // 9227465

function fib(n){
    if (n <= 2) return 1;
    return fib(n-1) + fib(n-2);
}
 
console.log(fib(10));






////////////////////////////////////////////////////////////////// productOfArray([1,2,3]) // 6
// productOfArray([1,2,3,10]) // 60


function productArr(arr) {
	if(arr.length === 0) return 1;
  
  return arr[0] * productArr(arr.slice(1));
}

console.log(productArr([1,2,3,10]))




/////////////////////////////////////////////////////////////// Recursion Helper Function

function collectOddValues(arr){
    
    let result = [];

    function helper(helperInput){
        if(helperInput.length === 0) {
            return;
        }
        
        if(helperInput[0] % 2 !== 0){
            result.push(helperInput[0])
        }
        
        helper(helperInput.slice(1))
    }
    
    helper(arr)

    return result;
}

collectOddValues([1,2,3,4,5,6,7,8,9])


/////////////////////////////////////////////////////////////////////// Pure Recursion

function collectOddValues(arr){
    let newArr = [];
    
    if(arr.length === 0) {
        return newArr;
    }
        
    if(arr[0] % 2 !== 0){
        newArr.push(arr[0]);
    }
        
    newArr = newArr.concat(collectOddValues(arr.slice(1)));
    return newArr;
}

collectOddValues([1,2,3,4,5])
                                   

